FORM CHECK_VALIDATION .

  DATA : LT_ZNAME1 LIKE TABLE OF ZEDUT043_0010, "ZEMP
         LS_ZNAME1 LIKE ZEDUT043_0010,
         LT_ZNAME2 LIKE TABLE OF ZEDUT043_0020, "ZPROJ
         LS_ZNAME2 LIKE ZEDUT043_0020,
         LT_ZNAME3 LIKE TABLE OF ZEDUT043_0100, "ZMODULE, 사원이력조회
         LS_ZNAME3 LIKE ZEDUT043_0100,
         LT_ZNAME4 LIKE TABLE OF ZEDUT043_0100, "기준정보
         LS_ZNAME4 LIKE ZEDUT043_0010.

  SELECT *
    FROM ZEDUT043_0010
    INTO CORRESPONDING FIELDS OF TABLE LT_ZNAME1.

  SELECT *
    FROM ZEDUT043_0020
    INTO CORRESPONDING FIELDS OF TABLE LT_ZNAME2.

  SELECT *
    FROM ZEDUT043_0100
    INTO CORRESPONDING FIELDS OF TABLE LT_ZNAME3.

  SORT GT_DISP1 BY ZEMP ZPROJ ZMODULE ZPERIOD_S.
  DELETE ADJACENT DUPLICATES FROM GT_DISP1 COMPARING ZEMP ZPROJ ZMODULE ZPERIOD_S.
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE LT_ZNAME4
    FROM ZEDUT043_0100
    FOR ALL ENTRIES IN GT_DISP1
    WHERE ZEMP      = GT_DISP1-ZEMP
      AND ZPROJ     = GT_DISP1-ZPROJ
      AND ZMODULE   = GT_DISP1-ZMODULE
      AND ZPERIOD_S = GT_DISP1-ZPERIOD_S
      AND ZPERIOD_E = GT_DISP1-ZPERIOD_E.


  CLEAR GS_DISP1.
*******VALIDATION CHECK**********************************************
  LOOP AT GT_DISP1 ASSIGNING FIELD-SYMBOL(<GS_DISP1>).

    "1. 기준정보 CHECK
    CLEAR LS_ZNAME4.

    READ TABLE LT_ZNAME4 INTO LS_ZNAME4
                         WITH KEY ZEMP      = <GS_DISP1>-ZEMP
                                  ZPROJ     = <GS_DISP1>-ZPROJ
                                  ZMODULE   = <GS_DISP1>-ZMODULE
                                  ZPERIOD_S = <GS_DISP1>-ZPERIOD_S.

    IF SY-SUBRC = 0. "DB에 있는 GS_DISP1이라면,
      <GS_DISP1>-ICON    = ICON_LED_RED.
      <GS_DISP1>-MESSAGE = TEXT-T14.

    ELSE.            "DB에 없는 GS_DISP1이라면, 나머지 VALIDATION CHECK

      "2. 사원번호 CHECK
      CLEAR LS_ZNAME1.
      SORT LT_ZNAME1 BY ZEMP.
      READ TABLE LT_ZNAME1 WITH KEY ZEMP = <GS_DISP1>-ZEMP
                           INTO LS_ZNAME1
                           BINARY SEARCH TRANSPORTING ZEMP.

      IF SY-SUBRC <> 0. "존재하지 않는 사원번호일 경우
        <GS_DISP1>-ICON    = ICON_LED_RED.
        <GS_DISP1>-MESSAGE = TEXT-T11.

      ELSE.
        <GS_DISP1>-ICON = ICON_LED_YELLOW.

      ENDIF.


      "3. 프로젝트 CHECK
      CLEAR LS_ZNAME2.
      SORT LT_ZNAME2 BY ZPROJ.
      READ TABLE LT_ZNAME2 WITH KEY ZPROJ = <GS_DISP1>-ZPROJ
                           INTO LS_ZNAME2
                           BINARY SEARCH TRANSPORTING ZPROJ.

      IF SY-SUBRC <> 0 AND <GS_DISP1>-MESSAGE IS INITIAL."1. 프로젝트X, 사원번호O
        <GS_DISP1>-ICON    = ICON_LED_RED.
        <GS_DISP1>-MESSAGE = TEXT-T12.

      ELSEIF SY-SUBRC <> 0 AND <GS_DISP1>-MESSAGE IS NOT INITIAL. "2. 플X, 사X
        CONCATENATE <GS_DISP1>-MESSAGE ', 프로젝트ID' INTO <GS_DISP1>-MESSAGE.

      ENDIF.


      "4. 모듈 CHECK
      CLEAR LS_ZNAME3.
      SORT LT_ZNAME3 BY ZMODULE.
      READ TABLE LT_ZNAME3 WITH KEY ZMODULE = <GS_DISP1>-ZMODULE
                           INTO LS_ZNAME3
                           BINARY SEARCH TRANSPORTING ZMODULE.

      IF SY-SUBRC <> 0 AND <GS_DISP1>-MESSAGE IS INITIAL. "1. 모듈X, 사원번호/플젝O
        <GS_DISP1>-ICON    = ICON_LED_RED.
        <GS_DISP1>-MESSAGE = TEXT-T13.

      ELSEIF SY-SUBRC <> 0 AND <GS_DISP1>-MESSAGE IS NOT INITIAL. "2. 모듈X, 사원번호/플젝X
        CONCATENATE <GS_DISP1>-MESSAGE ', 모듈' INTO <GS_DISP1>-MESSAGE.

      ENDIF.



      "5. 투입월, 종료월 CHECK
      IF <GS_DISP1>-ZPERIOD_E IS NOT INITIAL AND
         <GS_DISP1>-ZPERIOD_S > <GS_DISP1>-ZPERIOD_E.

        IF <GS_DISP1>-MESSAGE IS INITIAL. "1. 투입월 > 종료월, 사원번호/모듈/플젝 O
          <GS_DISP1>-ICON    = ICON_LED_RED.
          <GS_DISP1>-MESSAGE = TEXT-T16.

        ELSEIF <GS_DISP1>-MESSAGE IS NOT INITIAL. "2. 투입월 > 종료월, 그 외 유효X
          <GS_DISP1>-MESSAGE =  <GS_DISP1>-MESSAGE && ', 종료월이 투입월보다 빠릅니다. '.
        ENDIF.

      ENDIF.

      "* 저장 가능 MSG
      IF <GS_DISP1>-MESSAGE IS INITIAL.
        <GS_DISP1>-MESSAGE = '저장 가능'.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " CHECK_VALIDATION
